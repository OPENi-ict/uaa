# Configuration in this file is overridden by an external file
# if any of these exist: 
# [$UAA_CONFIG_URL, $UAA_CONFIG_PATH/uaa.yml, $CLOUDFOUNDRY_CONFIG_PATH/uaa.yml]

#spring_profiles: mysql,default
spring_profiles: postgresql,default
#spring_profiles: ldap,default,hsqldb
#spring_profiles: saml
#spring_profiles: keystone,default,hsqldb

database:
  driverClassName: org.postgresql.Driver
  url: jdbc:postgresql:uaa
  username: postgres
  password: fb20c47bffebca63

#note - this is not the place to set these properties
# - they are just here for documentation purposes
#database.driverClassName: org.postgresql.Driver
#database.url: jdbc:postgresql:uaa
#database.username: root
#database.password: changeme

#postgresql commands that were run were
#create database uaa;
#create user root with superuser password 'changeme';


#database.driverClassName: org.mariadb.jdbc.Driver
#database.url: jdbc:mysql://localhost:3306/uaa
#database.username: root
#database.password: changeme

#mysql commands that were run
#create database uaa;
#SET PASSWORD FOR 'root'@'localhost' = PASSWORD('changeme');
#SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('changeme');

#authentication:
#  policy:
#    lockoutAfterFailures: 5
#    countFailuresWithinSeconds: 3600
#    lockoutPeriodSeconds: 600

#keystone:
#  authentication:
#    url: http://localhost:35357/v2.0/tokens
#    url: http://localhost:5000/v3/auth/tokens

#ldap:
#  profile:
#    file: ldap/ldap-simple-bind.xml
#  base:
#    url: 'ldaps://192.168.3.39:10636/'
#    userDnPattern: 'cn={0},ou=Users,dc=test,dc=com;cn={0},ou=OtherUsers,dc=example,dc=com'
#  ssl:
#    sslCertificate: ! '-----BEGIN CERTIFICATE-----
#    MIIBfTCCAScCBgFDfaC2yzANBgkqhkiG9w0BAQUFADBCMQswCQYDVQQGEwJVUzEMMAoGA1UEChMD
#    QVNGMRIwEAYDVQQLEwlEaXJlY3RvcnkxETAPBgNVBAMTCEFwYWNoZURTMB4XDTE0MDExMDE5Mjg0
#    MVoXDTE1MDExMDE5Mjg0MVowTDELMAkGA1UEBhMCVVMxDDAKBgNVBAoTA0FTRjESMBAGA1UECxMJ
#    RGlyZWN0b3J5MRswGQYDVQQDExJmaGFuaWstd29ya3N0YXRpb24wXDANBgkqhkiG9w0BAQEFAANL
#    ADBIAkEAuA6Nmto6NFCCJ+CwsBnT2cvMxuYgf26iZ3ckIpLhs2V4ZJ4PFinR6JZUsVnRp0RbYoV5
#    iW6F91XDTVtAMtDTJwIDAQABMA0GCSqGSIb3DQEBBQUAA0EATFGpEIprKYcnc+JuNcSQ8v2P2J7e
#    lQ23NhTaljASF0g8AZ7SZEItU8JFYqf/KnNJ7FPwo4LbMbr7Zg6BRKBvnQ==
#    -----END CERTIFICATE-----'
#    sslCertificateAlias: ldaps

#ldap:
#  profile:
#    file: ldap/ldap-search-and-bind.xml
#  base:
#    url: 'ldap://localhost:10389/'
#    userDn: 'cn=admin,dc=test,dc=com'
#    password: 'password'
#    searchBase: ''
#    searchFilter: 'cn={0}'

#ldap:
#  profile:
#    file: ldap/ldap-search-and-compare.xml
#  base:
#    url: 'ldap://localhost:10389/'
#    userDn: 'cn=admin,dc=test,dc=com'
#    password: 'password'
#    searchBase: '' 
#    searchFilter: 'cn={0}'
#    passwordAttributeName: userPassword
#    passwordEncoder: org.cloudfoundry.identity.uaa.login.ldap.DynamicPasswordComparator
#    localPasswordCompare: true

scim:
  users:
    - root|fb20c47bffebca63|info@openi-ict.eu|||uaa.user,uaa.admin,scim.write,scim.read,clients.read,clients.write,clients.secret,clients.admin

#password-policy.required-score: 0

#jwt:
#  token:
#    signing-key: tokenkey
#    verification-key: tokenkey

jwt:
   token:
      signing-key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIBOQIBAAJBAKT8kGk6ZNo3sC4IIo29leRLVD23T2r0vWXBEkk2pV42HsxKAmPs
        789AGHH9XwbGpD7FvrcBWWgb65v32Hg/NGkCAwEAAQJAVCNxShi7ggXQVUlUxdAf
        dvNrnKW1XKg/Rns15hx2LRq+6oKv0RsPH3N4P64ZYDt62Yf0o1uLC66YtVgf5BgN
        mQIhANCAIYQ3KSXLLmDW/wSCE85eOipP7Duxaan694LdO8+XAiEAypKs/I9t7Ef5
        k4zpmm1/qS7ht/LWr+FsqHPB1nQ9m/8CIE19YXeHHLbcJbd+EDd3tK69HHb/Tzf8
        Pt4a1QSA/qqvAiBLupGYyTXawv12P5OE+7Jh2Pjg/5NqpOcuAjhQp5vwmQIgNFWQ
        km1fT/DDO4nwU7EP3WgBpn26E9eckdtgxIO+FEM=
        -----END RSA PRIVATE KEY-----
      verification-key: |
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKT8kGk6ZNo3sC4IIo29leRLVD23T2r0
        vWXBEkk2pV42HsxKAmPs789AGHH9XwbGpD7FvrcBWWgb65v32Hg/NGkCAwEAAQ==
        -----END PUBLIC KEY-----
         
#issuer.uri: http://localhost:8080/uaa

oauth:
  client:
    override: true
    autoapprove:
      - cf
      - openi
  clients:
    openi:
      id: openi
      secret: fb20c47bffebca63
      scope: uaa.admin,clients.read,clients.write,clients.secret,scim.read,scim.write,clients.admin,cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,password.write,scim.read,scim.userids,scim.write
      authorized-grant-types: implicit,password,refresh_token #,authorization_code,client_credentials
#      authorities: uaa.admin,clients.read,clients.write,clients.secret,scim.read,scim.write,clients.admin,cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,password.write,scim.read,scim.userids,scim.write
      authorities: uaa.none
      autoapprove: true
      override: true
#    app:
#      id: app
#      secret: fb20c47bffebca63
#    login:
#      id: login
#      secret: fb20c47bffebca63
#    dashboard:
#      id: dashboard
#      secret: fb20c47bffebca63
    cf:
      id: cf
      secret: fb20c47bffebca63
      #scope: cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,password.write,scim.read,scim.userids,scim.write
      #authorized-grant-types: implicit,password,refresh_token
      #authorities: uaa.none
      #autoapprove: true
      #override: true
  user:
    authorities:
      - openid
      - scim.me
#      - cloud_controller.read
#      - cloud_controller.write
#      - cloud_controller_service_permissions.read
      - password.write
      - scim.userids
      - uaa.user
      - approvals.me
      - oauth.approvals
